{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Chess.js"],"names":["PointTypeEnum","Invalid","Empty","BlackChess","WhiteChess","DoubleChess","cc","Class","extends","Component","properties","ChessImage","Sprite","ChessSprite","SpriteFrame","HighLightSprite","SmallWhiteDot","Node","_point","Point","get","set","value","IsBlack","SrcPos","IsCurrentFlag","active","start","node","on","EventType","TOUCH_START","onTouchChess","TOUCH_MOVE","onMoveChess","TOUCH_END","onMoveEnd","InitChess","isBlack","isNew","spriteFrame","Flash","getComponent","Animation","play","StopFlash","stop","opacity","event","window","GameController","GameState","CommonDefine","GameStateEnum","MoveChess","IsBlackTurn","NewChess","root","find","pos","position","worldPos","parent","convertToWorldSpaceAR","localPos","convertToNodeSpaceAR","EatChess","delta","touch","getDelta","x","y","Board","point","CheckPosInPoint","bCanMove","CheckCanMoveTo","centerPos","Point2Position","prePt","v2","AfterMoveTo"],"mappings":"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","file":"Chess.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["const PointTypeEnum = {\n    Invalid:0,\n    Empty:1,\n    BlackChess:2,\n    WhiteChess:3,\n    DoubleChess:4,\n};\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        ChessImage:cc.Sprite,\n        ChessSprite:[cc.SpriteFrame],\n        HighLightSprite:[cc.SpriteFrame],\n        SmallWhiteDot:cc.Node,\n        _point:null,\n        Point:{\n            get(){\n                return this._point;\n            },\n            set(value){\n                this._point = value;\n            }\n        },\n        IsBlack:true,\n        SrcPos:null,\n        IsCurrentFlag:{\n            set(value){\n                this.SmallWhiteDot.active = value;\n            }\n        }\n    },\n\n    \n\n    start () {\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchChess, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onMoveChess, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onMoveEnd, this);\n    },\n\n    InitChess(isBlack,isNew)\n    {\n        this.IsBlack = isBlack;\n        this.ChessImage.spriteFrame = isBlack ? this.ChessSprite[0] : this.ChessSprite[1];\n        this.IsCurrentFlag = isNew;\n    },\n    \n    Flash()\n    {\n        this.ChessImage.spriteFrame = this.IsBlack ? this.HighLightSprite[0] : this.HighLightSprite[1];\n        this.node.getComponent(cc.Animation).play();\n    },\n    StopFlash()\n    {\n        this.ChessImage.spriteFrame = this.IsBlack ? this.ChessSprite[0] : this.ChessSprite[1];\n        this.node.getComponent(cc.Animation).stop();\n        this.node.opacity = 255;\n    },\n    onTouchChess(event)\n    {\n        if(window.GameController.GameState == CommonDefine.GameStateEnum.MoveChess &&\n            this.IsBlack == window.GameController.IsBlackTurn)\n        {\n            window.GameController.NewChess.IsCurrentFlag = false;\n            this.IsCurrentFlag = true;\n            window.GameController.NewChess = this;\n            return;\n\n            let root = cc.find(\"Canvas\");\n            let pos = this.node.position;\n            const worldPos = this.node.parent.convertToWorldSpaceAR(pos);\n            const localPos = root.convertToNodeSpaceAR(worldPos);\n            this.node.parent = root;\n            this.node.position = localPos;\n            this.SrcPos = pos;\n            return;\n        }else if(window.GameController.GameState == CommonDefine.GameStateEnum.EatChess &&\n            this.IsBlack == !window.GameController.IsBlackTurn)\n        {\n            window.GameController.EatChess(this.node);\n        }\n    },\n    onMoveChess(event)\n    {\n        return;\n        if(window.GameController.GameState != CommonDefine.GameStateEnum.MoveChess ||\n            this.IsBlack != window.GameController.IsBlackTurn)\n        {\n            return;\n        }\n\n        const delta = event.touch.getDelta();\n        this.node.x += delta.x;\n        this.node.y += delta.y;\n    },\n    onMoveEnd(event)\n    {\n        return;\n        if(window.GameController.GameState != CommonDefine.GameStateEnum.MoveChess ||\n            this.IsBlack != window.GameController.IsBlackTurn)\n        {\n            return;\n        }\n        let parent = window.GameController.Board;\n        let pos = this.node.position;\n        let worldPos = this.node.parent.convertToWorldSpaceAR(pos);\n        let localPos = parent.convertToNodeSpaceAR(worldPos);\n        let point = window.GameController.CheckPosInPoint(localPos,CommonDefine.PointTypeEnum.Empty);\n        if(point != null)//坐标点落在某个棋盘点上且该棋盘点上无子\n        {\n            let bCanMove = window.GameController.CheckCanMoveTo(this.Point,point);\n            if(bCanMove)//该棋盘点是当前棋子的合法行走点\n            {\n                let centerPos = window.GameController.Point2Position(point);\n                this.node.parent = parent;\n                this.node.position = centerPos;\n                let prePt = cc.v2(this.Point.x,this.Point.y);\n                this.Point = point;\n                window.GameController.NewChess.IsCurrentFlag = false;\n                this.IsCurrentFlag = true;\n                window.GameController.NewChess = this;\n                window.GameController.AfterMoveTo(prePt,point);\n            }else{//不合法，回退\n                this.node.position = this.SrcPos;\n                this.node.parent = parent;\n            }\n        }else{\n            //没有移动到交叉点上,还原到移动前的位置\n            this.node.position = this.SrcPos;\n            this.node.parent = parent;\n        }\n\n    }\n});\n"]}